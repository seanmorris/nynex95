name: Publish Github Auth Worker

on:
  push:
    branches:
      - '**'

    paths:
      - .cloudflare/workers/github-auth/**
      - .github/workflows/publish-github-auth.yml

jobs:
  publish-workers:
    name:    Publish Github Auth Worker
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Checking Existing Worker
        run:  'set -eux; curl https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/workers/scripts/$SCRIPT_NAME -H "Authorization: Bearer $CF_API_TOKEN"'
        env:
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          SCRIPT_NAME: nynex-github-auth

      - name: Delete Existing Worker
        run:  'set -eux; curl -X DELETE https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/workers/scripts/$SCRIPT_NAME -H "Authorization: Bearer $CF_API_TOKEN"'
        env:
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          SCRIPT_NAME: nynex-github-auth

      - name: Delete Existing KV Store
        run: set -eux; sudo npm install -g npm@latest; npm install @cloudflare/wrangler --save; sudo npm i -g @cloudflare/wrangler; NAMESPACE_ID=`wrangler kv:namespace list | jq -r ".[] | select(.title == \"$SCRIPT_NAME-kv\").id"`; echo $SCRIPT_NAME; echo $NAMESPACE_ID; yes 2>/dev/null | wrangler kv:namespace delete --namespace-id=$NAMESPACE_ID
        working-directory: '.cloudflare/workers/q-auth'
        env:
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          SCRIPT_NAME: nynex-github-auth

      - name: Init, Plan, Deploy
        run: set -eux; curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add - && sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main" && sudo apt-get update && sudo apt-get install terraform && terraform init && terraform plan && terraform apply --auto-approve --chdir=.
        working-directory: '.cloudflare/workers/github-auth'
        env:
          TF_VAR_CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          TF_VAR_CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_GHAPI_CLIENT_ID: ${{ secrets.GHAPI_CLIENT_ID }}
          TF_VAR_GHAPI_CLIENT_SECRET: ${{ secrets.GHAPI_CLIENT_SECRET }}

